Exercice: Première application Vue

Dans le projet que vous avez créé avec Vue CLI, créez une nouvelle instance Vue.
Déclarez quelques propriétés dans data et affichez-les dans votre template.
Modifiez ces propriétés après un certain délai (utilisez setTimeout) et observez le système de réactivité à l'œuvre.

-----------------------------------------------------------------------------------------------------------
Exercice: Todolist

Objectif:
Créer une simple TodoList qui permet à l'utilisateur d'ajouter, de supprimer et de marquer comme terminées des tâches à faire.

------------------------------------------------

1. Ajouter une Todo:
- Ajoutez un champ de saisie pour la nouvelle tâche.
- Ajoutez un bouton pour soumettre la nouvelle tâche.
- Affichez la liste des tâches sous le champ de saisie.
- Ajoutez la logique nécessaire pour ajouter une nouvelle tâche à la liste lorsque l'utilisateur clique sur le bouton ou appuie sur la touche Entrée.

------------------------------------------------

2. Marquer une Todo comme terminée et Supprimer:
- Pour chaque tâche dans la liste, ajoutez un bouton "Terminé" et un bouton "Supprimer".
- Lorsque l'utilisateur clique sur "Terminé", la tâche doit être visuellement marquée comme terminée.
- Lorsque l'utilisateur clique sur "Supprimer", la tâche doit être supprimée de la liste.
- Ajoutez la logique nécessaire pour gérer ces actions.

------------------------------------------------

Astuces:
- Utilisez v-model pour la liaison bidirectionnelle entre le champ de saisie et une variable réactive.
- Utilisez v-for pour afficher la liste des tâches.
- Pensez à utiliser la fonction ref de Vue pour créer des variables réactives.
- Les tâches peuvent être représentées comme des objets avec des propriétés telles que id, text et done.

-----------------------------------------------------------------------------------------------------------

3. Edition d'une Todo:

Objectif: Permettre à l'utilisateur de modifier le texte d'une tâche existante.

Instructions:

Ajoutez une icône ou un bouton "Modifier" à côté de chaque tâche.
Lorsque l'utilisateur clique sur "Modifier", transformez le texte de la tâche en champ de saisie.
L'utilisateur doit pouvoir modifier le texte et valider avec la touche Entrée ou en cliquant en dehors du champ.

-----------------------------------------------------------------------------------------------------------

4. Priorisation des Todos:

Objectif: Permettre à l'utilisateur de définir une priorité pour chaque tâche.

Instructions:

- À côté de chaque tâche, ajoutez une option pour définir sa priorité (par exemple, haute, moyenne, basse).
- Les tâches peuvent être triées en fonction de leur priorité.
Vous pourriez utiliser des couleurs différentes pour chaque niveau de priorité.

-----------------------------------------------------------------------------------------------------------
5. Filtre de recherche:

Objectif: Ajouter une barre de recherche pour filtrer les tâches par mot-clé.

Instructions:

- Ajoutez un champ de recherche en haut de la liste.
- Lorsque l'utilisateur tape dans ce champ, filtrez la liste des tâches pour n'afficher que celles contenant le mot-clé saisi.

-----------------------------------------------------------------------------------------------------------

6. Catégorisation des Todos:

Objectif: Laisser les utilisateurs classer leurs tâches par catégories.

Instructions:

- Ajoutez une option pour créer des catégories (par exemple, travail, personnel, courses).
- Lors de l'ajout ou de la modification d'une tâche, l'utilisateur devrait pouvoir la classer dans une catégorie.
- Ajoutez une option pour filtrer les tâches par catégorie.

-----------------------------------------------------------------------------------------------------------

7. Utilisation des propriétés calculées pour afficher des statistiques

Objectif:
Afficher le nombre total de tâches, le nombre de tâches terminées et le pourcentage de tâches terminées.

Instructions:
- Créez une section "Statistiques" dans votre application.
- Utilisez une propriété calculée pour déterminer le nombre total de tâches.
- Utilisez une autre propriété calculée pour déterminer le nombre de tâches terminées.
- Enfin, utilisez une propriété calculée pour déterminer le pourcentage de tâches terminées.

Astuces:
Les propriétés calculées sont des fonctions qui sont mises en cache et ne sont recalculées que lorsque leurs dépendances changent.

-----------------------------------------------------------------------------------------------------------

8. Utilisation des observateurs pour surveiller les modifications

Objectif:
Envoyez une alerte à l'utilisateur s'il a plus de 10 tâches non terminées.

Instructions:
- Utilisez un observateur pour surveiller la liste des tâches.
Chaque fois que la liste change, vérifiez combien de tâches ne sont pas terminées.
- Si le nombre dépasse 10, affichez une alerte à l'utilisateur.

Astuces:
Utilisez l'option watch pour créer des observateurs dans Vue.

-----------------------------------------------------------------------------------------------------------

9. Refactoriser le passage de todo a chaque composant enfant avec le v-model.

-----------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------
